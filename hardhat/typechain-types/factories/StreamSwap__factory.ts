/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StreamSwap, StreamSwapInterface } from "../StreamSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS_RATIO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountToken1",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amountToken2",
        type: "uint256",
      },
    ],
    name: "addInitialLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_addToken1",
        type: "uint256",
      },
    ],
    name: "addLiquidityToken1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addLiquidityToken2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_addToken1",
        type: "uint256",
      },
    ],
    name: "addLiquidityToken2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "checkLiquidityToken1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getLPTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveToken1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserveToken2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ratio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "shares_per_user",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200107f3803806200107f833981016040819052620000349162000267565b60408051808201825260038082526253535760e81b60208084019182528451808601909552600e85526d053747265616d2053776170204c560941b90850152825192939262000085929190620001a4565b5080516200009b906004906020840190620001a4565b5050506001600160a01b0382166200010a5760405162461bcd60e51b815260206004820152602760248201527f546f6b656e312061646472657373207061737365642069732061206e756c6c206044820152666164647265737360c81b60648201526084015b60405180910390fd5b6001600160a01b038116620001725760405162461bcd60e51b815260206004820152602760248201527f546f6b656e322061646472657373207061737365642069732061206e756c6c206044820152666164647265737360c81b606482015260840162000101565b600580546001600160a01b039384166001600160a01b03199182161790915560068054929093169116179055620002db565b828054620001b2906200029e565b90600052602060002090601f016020900481019282620001d6576000855562000221565b82601f10620001f157805160ff191683800117855562000221565b8280016001018555821562000221579182015b828111156200022157825182559160200191906001019062000204565b506200022f92915062000233565b5090565b5b808211156200022f576000815560010162000234565b80516001600160a01b03811681146200026257600080fd5b919050565b600080604083850312156200027a578182fd5b62000285836200024a565b915062000295602084016200024a565b90509250929050565b600181811c90821680620002b357607f821691505b60208210811415620002d557634e487b7160e01b600052602260045260246000fd5b50919050565b610d9480620002eb6000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c806371ca337d116100d8578063a9059cbb1161008c578063dd62ed3e11610066578063dd62ed3e146102ce578063e09bafcf14610307578063e85313281461030f57600080fd5b8063a9059cbb146102b1578063b6fbd91914610216578063d92fc57d146102c457600080fd5b806395d89b41116100bd57806395d89b4114610283578063a40f4fa11461028b578063a457c2d71461029e57600080fd5b806371ca337d1461025a5780638412de0a1461026357600080fd5b8063313ce5671161013a5780636b613976116101145780636b613976146102275780636d8503991461022957806370a082311461023157600080fd5b8063313ce567146101f457806339509351146102035780635924554b1461021657600080fd5b80631224abfb1161016b5780631224abfb146101c857806318160ddd146101d957806323b872dd146101e157600080fd5b806306fdde0314610187578063095ea7b3146101a5575b600080fd5b61018f610322565b60405161019c9190610c63565b60405180910390f35b6101b86101b3366004610bc7565b6103b4565b604051901515815260200161019c565b60025b60405190815260200161019c565b6002546101cb565b6101b86101ef366004610b8c565b6103ce565b6040516012815260200161019c565b6101b8610211366004610bc7565b6103f2565b6101cb610224366004610bf0565b90565b005b6101cb610431565b6101cb61023f366004610b40565b6001600160a01b031660009081526020819052604090205490565b6101cb60075481565b6101cb610271366004610b40565b60086020526000908152604090205481565b61018f6104b3565b610227610299366004610c42565b6104c2565b6101b86102ac366004610bc7565b610539565b6101b86102bf366004610bc7565b6105e8565b6101cb620f424081565b6101cb6102dc366004610b5a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101cb6105f6565b6101cb61031d366004610c20565b610627565b60606003805461033190610d0d565b80601f016020809104026020016040519081016040528092919081815260200182805461035d90610d0d565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000336103c2818585610704565b60019150505b92915050565b6000336103dc85828561085c565b6103e78585856108ee565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906103c2908290869061042c908790610cb6565b610704565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024015b60206040518083038186803b15801561047657600080fd5b505afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae9190610c08565b905090565b60606004805461033190610d0d565b806104d0620f424084610cee565b6104da9190610cce565b600755600e829055600f8190556040805160808101909152806104fd8385610cee565b815242602080830191909152600060408084018290526060938401919091528351600a5590830151600b55820151600c550151600d5560095550565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156105db5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6103e78286868403610704565b6000336103c28185856108ee565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240161045e565b6005546000906001600160a01b038381169116148061065357506006546001600160a01b038381169116145b61069f5760405162461bcd60e51b815260206004820152600b60248201527f4e4f545f494e5f504f4f4c00000000000000000000000000000000000000000060448201526064016105d2565b6005546000906001600160a01b03848116911614156106e1576106d9600e546106d386600f54610b0590919063ffffffff16565b90610b18565b9150506103c8565b6106fc600f546106d386600e54610b0590919063ffffffff16565b949350505050565b6001600160a01b03831661077f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016105d2565b6001600160a01b0382166107fb5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016105d2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146108e857818110156108db5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105d2565b6108e88484848403610704565b50505050565b6001600160a01b03831661096a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016105d2565b6001600160a01b0382166109e65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016105d2565b6001600160a01b03831660009081526020819052604090205481811015610a755760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016105d2565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610aac908490610cb6565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610af891815260200190565b60405180910390a36108e8565b6000610b118284610cee565b9392505050565b6000610b118284610cce565b80356001600160a01b0381168114610b3b57600080fd5b919050565b600060208284031215610b51578081fd5b610b1182610b24565b60008060408385031215610b6c578081fd5b610b7583610b24565b9150610b8360208401610b24565b90509250929050565b600080600060608486031215610ba0578081fd5b610ba984610b24565b9250610bb760208501610b24565b9150604084013590509250925092565b60008060408385031215610bd9578182fd5b610be283610b24565b946020939093013593505050565b600060208284031215610c01578081fd5b5035919050565b600060208284031215610c19578081fd5b5051919050565b60008060408385031215610c32578182fd5b82359150610b8360208401610b24565b60008060408385031215610c54578182fd5b50508035926020909101359150565b6000602080835283518082850152825b81811015610c8f57858101830151858201604001528201610c73565b81811115610ca05783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610cc957610cc9610d48565b500190565b600082610ce957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610d0857610d08610d48565b500290565b600181811c90821680610d2157607f821691505b60208210811415610d4257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea264697066735822122093d91d2cda757caab9a5e68fa22440b0264c873fbd8773c3e91c213723858ab964736f6c63430008040033";

type StreamSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreamSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StreamSwap__factory extends ContractFactory {
  constructor(...args: StreamSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _token1: string,
    _token2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StreamSwap> {
    return super.deploy(
      _token1,
      _token2,
      overrides || {}
    ) as Promise<StreamSwap>;
  }
  getDeployTransaction(
    _token1: string,
    _token2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token1, _token2, overrides || {});
  }
  attach(address: string): StreamSwap {
    return super.attach(address) as StreamSwap;
  }
  connect(signer: Signer): StreamSwap__factory {
    return super.connect(signer) as StreamSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreamSwapInterface {
    return new utils.Interface(_abi) as StreamSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StreamSwap {
    return new Contract(address, _abi, signerOrProvider) as StreamSwap;
  }
}
