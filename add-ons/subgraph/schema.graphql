type LoanOffer @entity {
  id: ID!
  loanMaxAmount: BigInt!
  loanMinAmount: BigInt!
  fee: BigInt!
  superToken: String!
  collateralShare: BigInt!
  maxDuration: BigInt!
  loanProvider: User!
  status: BigInt!
}

type LoanDemand @entity {
  id: ID!
  loanAmount: BigInt!
  fee: BigInt!
  superToken: String!
  collateralShare: BigInt!
  duration: BigInt!
  loanTaker: User!
  status: BigInt!
}

type LoanTraded @entity {
  id: ID!
  loanTotalAmount: BigInt!
  loanAmount: BigInt!
  collateral: BigInt!
  fee: BigInt!
  initTimestamp: BigInt!
  duration: BigInt!
  superToken: String!
  flowRate: BigInt!
  status: BigInt!
  collateralShare: BigInt!
  loanTaker: User!
  loanProvider: User!
}

type User @entity {
  id: ID!
  offersCreated: [LoanOffer!] @derivedFrom(field: "loanProvider")
  demandsCreated: [LoanDemand!] @derivedFrom(field: "loanTaker")
  loansSold: [LoanTraded!] @derivedFrom(field: "loanProvider")
  loansBought: [LoanTraded!] @derivedFrom(field: "loanTaker")
  totalIncoming: BigInt!
  totalOutgoing: BigInt!
}

type TotalSummary @entity {
  id:ID!
  totalIncoming: BigInt!
  totalBorrowed:BigInt!

}

